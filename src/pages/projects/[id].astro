---
import Layout from "../../layouts/Layout.astro";
import { projects } from "../../datas/projects";
import { getProjectImages } from "../../utils/imageFinder";
import "../../styles/globals.css";

export async function getStaticPaths() {
  const { projects } = await import("../../datas/projects");
  return projects.map((project) => ({
    params: { id: project.id },
    props: { projects },
  }));
}
// Récupérer l'id depuis l'URL
const { id } = Astro.params;

// Chercher le projet correspondant à l'id
const project = projects.find((p) => p.id === id);

if (!project) {
  Astro.redirect("/projects");
}

// Récupérer les images du projet
const projectImages = getProjectImages(project.title);

const projectData = {
  ...project,
  images: projectImages,
  longDescription: project.longDescription || project.description,
  features: project.features || [],
  technologies: project.technologies || project.tags,
  links: project.links || {
    github: "#",
    demo: "#",
    swagger: "#",
    api: "#",
  },
};
---

<Layout title={`${project.title} - Portfolio`}>
  <main>
    <article class="py-20 px-6">
      <div class="container mx-auto max-w-5xl">
        <!-- Header -->
        <div class="mb-12">
          <a
            href="/projects"
            class="text-primary hover:underline mb-4 inline-block"
          >
            ← Go back to projects
          </a>

          <h1 class="text-5xl font-bold mb-4">{projectData.title}</h1>

          <div class="flex items-center gap-4 text-muted-foreground mb-6">
            <div class="flex items-center gap-2">
              <svg
                class="h-4 w-4"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                ></path>
              </svg>
              <span>{projectData.date}</span>
            </div>
          </div>

          <div class="flex flex-wrap gap-2 mb-6">
            {
              projectData.tags.map((tag) => (
                <span class="inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium border-transparent bg-secondary text-primary">
                  {tag}
                </span>
              ))
            }
          </div>

          <p class="text-lg text-muted-foreground leading-relaxed">
            {projectData.description}
          </p>
        </div>

        <!-- Links -->
        {
          projectData.links &&
            (projectData.links.github ||
              projectData.links.demo ||
              projectData.links.swagger) && (
              <div class="flex gap-4 mb-12">
                {projectData.links.github &&
                  projectData.links.github !== "#" && (
                    <a
                      href={projectData.links.github}
                      class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all bg-primary text-primary-foreground hover:bg-primary/90 h-9 px-4 py-2"
                    >
                      <svg
                        class="h-4 w-4 mr-2"
                        fill="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z" />
                      </svg>
                      See on GitHub
                    </a>
                  )}
                {projectData.links.demo && projectData.links.demo !== "#" && (
                  <a
                    href={projectData.links.demo}
                    class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all border bg-background hover:bg-accent hover:text-accent-foreground h-9 px-4 py-2"
                  >
                    <svg
                      class="h-4 w-4 mr-2"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
                      />
                    </svg>
                    See Demo
                  </a>
                )}
                {projectData.links.swagger &&
                  projectData.links.swagger !== "#" && (
                    <a
                      href={projectData.links.swagger}
                      class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all border bg-background hover:bg-accent hover:text-accent-foreground h-9 px-4 py-2"
                    >
                      <svg
                        class="h-4 w-4 mr-2"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                        />
                      </svg>
                      API Documentation
                    </a>
                  )}
              </div>
            )
        }

        <!-- Main Image -->
        {
          projectData.images.length > 0 && (
            <div class="mb-12 rounded-lg overflow-hidden">
              <img
                src={projectData.images[0]}
                alt={projectData.title}
                class="w-full h-auto"
              />
            </div>
          )
        }

        <!-- Content -->
        <div class="grid md:grid-cols-3 gap-12 mb-12">
          <div class="md:col-span-2 space-y-8">
            <div>
              <h2 class="text-2xl font-bold mb-4">About the project</h2>
              <p class="text-muted-foreground leading-relaxed">
                {projectData.longDescription}
              </p>
            </div>

            {
              projectData.features.length > 0 && (
                <div>
                  <h2 class="text-2xl font-bold mb-4">Key Features</h2>
                  <ul class="space-y-2">
                    {projectData.features.map((feature) => (
                      <li class="flex items-start gap-2">
                        <span class="text-primary mt-1">•</span>
                        <span class="text-muted-foreground">{feature}</span>
                      </li>
                    ))}
                  </ul>
                </div>
              )
            }
          </div>

          <div>
            <div class="bg-muted/50 p-6 rounded-lg sticky top-6">
              <h3 class="font-semibold mb-4">Used technologies</h3>
              <div class="flex flex-wrap gap-2">
                {
                  projectData.technologies.map((tech) => (
                    <span class="inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium text-foreground hover:bg-accent hover:text-accent-foreground">
                      {tech}
                    </span>
                  ))
                }
              </div>
            </div>
          </div>
        </div>

        <!-- Gallery -->
        {
          projectData.images.length > 1 && (
            <div>
              <h2 class="text-2xl font-bold mb-6">Gallery</h2>
              <div class="grid md:grid-cols-3 gap-6">
                {projectData.images.map((image, index) => (
                  <div class="rounded-lg overflow-hidden">
                    <img
                      src={image}
                      alt={`Screenshot ${index + 1}`}
                      class="w-full h-auto"
                    />
                  </div>
                ))}
              </div>
            </div>
          )
        }
      </div>
    </article>
  </main>
</Layout>
