---
interface Props {
  id: string;
  title: string;
  date?: string;
  description?: string;
  tags: string[];
  images?: string[];
}

const { title, date, description, tags, images } = Astro.props;
---

<div class="space-y-8">
  <div class="space-y-4">
    <div class="flex items-center justify-between">
      <h1 class="text-3xl font-bold">{title}</h1>
      <div class="flex items-center gap-2 text-sm text-muted-foreground">
        <!-- Calendar SVG icon -->
        <svg
          class="h-4 w-4"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
          ><path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
          ></path></svg
        >
        <span>{date}</span>
      </div>
    </div>
    <p class="text-muted-foreground">{description}</p>
  </div>
  <div>
    <h3 class="font-semibold mb-3">links</h3>
    <div class="flex flex-wrap gap-2">
      {
        tags.map((tag) => (
          <span class="inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium bg-secondary text-secondary-foreground">
            {tag}
          </span>
        ))
      }
    </div>
  </div>
  <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-4">
    {[1, 2, 3].map((i) => <div class="aspect-video bg-muted rounded-lg" />)}
  </div>
</div>
